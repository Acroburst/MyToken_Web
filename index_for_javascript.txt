// Source code to interact with smart contract

//initialise function that will be called by window
const initialize = () => {
const isMetaMaskInstalled = () => { //for web3 browser detection
  const {ethereum} = window;
  return Boolean(ethereum && ethereum.isMetaMask); //other ethereum-compatible browsers and metamask
  }
  const ethereumButton = document.querySelector('.enableEthereumButton');
  const showAccount = document.querySelector('.showAccount');

  if (isMetaMaskInstalled()) { 
    console.log('MetaMask is installed!');
    ethereumButton.innerHTML = 'Connect';
    ethereumButton.disabled = false;
    ethereumButton.addEventListener('click', () => {
      getAccount();
    });
    async function getAccount() {
      try {
          // ask user for permission
          const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
          const account = accounts[0];
          showAccount.innerHTML = account;
          // user approved permission
          console.log('user is connected');
          alert("Your account has been connected successfully!");
          
      } catch (error) {
          // user rejected permission
          console.log('user rejected permission');
          console.log(error);
      }
    }
  }
  
  else {
      console.log('No Metamask Installed');
      ethereumButton.innerHTML = 'Unavailable';
      ethereumButton.disabled = true;
  }
};
window.addEventListener('DOMContentLoaded', initialize);  //execute initialise function when DOM content is loaded


// contractAddress and abi are setted after contract deploy
var contractAddress = '0xD875bb2d9C103Fcb3f69a07F4435B64c66f9D913';
abi = JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balances","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]'); 

//contract instance
const web3 = new Web3('https://data-seed-prebsc-1-s1.binance.org:8545');
const contract = new web3.eth.Contract(abi, contractAddress);

//Smart contract functions
const getTotalSupply = () => {
const generateButton = document.querySelector('.totalSupplyButton');
const tokenSupply = document.querySelector('.tokenSupply');
generateButton.addEventListener('click', () => {
  contract.methods.totalSupply().call(function (err, res) {
    if (err) {
      console.log("An error occured", err)
      return
    }
    console.log("The balance is: ", res);
    tokenSupply.innerHTML = res + ' TKN';
  })
});
};
window.addEventListener('DOMContentLoaded', getTotalSupply);